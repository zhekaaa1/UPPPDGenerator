<Application x:Class="UPPPDGenerator.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:UPPPDGenerator">
    <Application.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Strings.ru-RU.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <!-- оставить. -->
            <FontFamily x:Key="Lexend">pack://application:,,,/resources/fonts/LexendZetta-VariableFont_wght.ttf#Lexend Zetta</FontFamily>
            <FontFamily x:Key="InterF">pack://application:,,,/resources/fonts/Inter-VariableFont_opsz_wght.ttf#Inter</FontFamily>
            <FontFamily x:Key="Comfortaa">pack://application:,,,/resources/fonts/Comfortaa-VariableFont_wght.ttf#Comfortaa</FontFamily>
            <Style TargetType="TextBlock">
                <Setter Property="FontFamily" Value="{StaticResource Comfortaa}"/>
            </Style>
            <Style x:Key="CustomComboBoxStyle" TargetType="ComboBox">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Background" Value="#595959" />
                <Setter Property="BorderBrush" Value="#303030" />
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <ToggleButton x:Name="ToggleButton" Grid.Column="2" Focusable="false" IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" ClickMode="Press">
                                    <ToggleButton.Template>
                                        <ControlTemplate>
                                            <Grid>
                                                <Border x:Name="ToggleBorder" Background="{TemplateBinding Background}"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"/>
                                                <Path x:Name="Arrow" HorizontalAlignment="Right" Margin="0,0,4,0" Data="M 0 0 L 4 4 L 8 0 Z" Fill="White"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                                <!-- Оборачиваем ContentPresenter в Border для поддержки Background и Foreground -->
                                <Border x:Name="ContentBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Margin="3,3,23,3" VerticalAlignment="Center" HorizontalAlignment="Left">
                                    <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                </Border>
                                <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                    <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" Background="{TemplateBinding Background}">
                                        <Border x:Name="DropDownBorder" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}"/>
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="ContentBorder" Property="Background" Value="Gray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="Button" x:Key="threeDots">
                <!-- Отключаем стандартное выделение и визуальные эффекты -->
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0">
                                <Grid>
                                    <!-- Иконка внутри кнопки -->
                                    <Image Source="/resources/imgs/three-dots-vertical.png" Width="25" Height="25"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
